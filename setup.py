#!/usr/bin/env python
import os
import re
from setuptools import setup

def get_ver():
    # Todo: Add fall-back method for tarballs (sdist) builds.  See what others have done.
    from ksconf.vc.git import git_cmd
    ver_file = os.path.join("ksconf", "_version.py")
    gitout = git_cmd(["describe", "--tags", "--always", "--dirty"])
    version = gitout.stdout.strip()
    version = version.lstrip("v")   # Tags format is v0.0.0
    # replace hash with local version format
    version = re.sub(r'-(\d+)-ga([a-f0-9]+)(?:-(dirty))', r'.dev\1+\2\3', version)
    print "Version:  {}".format(version)
    open(ver_file, "w").write("# Version file autogenerated by the build process.\n"
                              "version = {0!r}\n".format(version))
    return version


setup(name="kintyre-splunk-conf",
      version=get_ver(),
      description="KSCONF: Kintyre's Splunk Configuration Tool",
      long_description=open("README.md").read(),
      long_description_content_type="text/markdown",
      classifiers=[
        "Development Status :: 4 - Beta",
        "Intended Audience :: System Administrators",
        "License :: OSI Approved :: Apache Software License",
        "Natural Language :: English",
        "Operating System :: MacOS :: MacOS X",
        "Operating System :: Microsoft :: Windows",
        "Operating System :: POSIX :: Linux",
        "Programming Language :: Python :: 2 :: Only",
        "Programming Language :: Python :: 2.7",
        "Topic :: Utilities",
      ],
      license="Apache Software License",
      keywords='ksconf splunk kinytre conf tool',
      author="Lowell Alleman",
      author_email="lowell@kintyre.co",
      url="https://github.com/Kintyre/ksconf",
      project_urls = {
        "homepage" : "https://github.com/Kintyre/ksconf",
        "docs" : "https://ksconf.readthedocs.io/",
      },
      packages=[
          "ksconf",
          "ksconf.commands",
          "ksconf.conf",
          "ksconf.util",
          "ksconf.vc",
      ],
      # Not required, but useful.
      # install_requires=[ "argcomplete "],
      extras_require = {
        "bash" : [ "argcomplete" ],
      },
      entry_points={
          "console_scripts": [
              "ksconf = ksconf.cli:cli",
          ]
      },
      include_package_data=True,
      zip_safe=True
)
