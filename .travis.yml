---
language: python

cache:
  directories:
    - "$HOME/.cache/pip"
    - "$HOME/.pyenv"

matrix:
  include:
    - os: linux
      # Travis Python 3.7 support https://github.com/travis-ci/travis-ci/issues/9069#issuecomment-425720905
      python: "3.7"
      env: BUILD_SDIST=true
      dist: xenial
      sudo: true
    - os: linux
      python: "3.8"
      dist: xenial
      env: EXTRA_PKGS="argcomplete"
      sudo: true
    - os: linux
      python: "3.9"
      dist: xenial
      sudo: true
    - os: linux
      python: "3.10"
      dist: xenial
      sudo: true
    - os: osx
      language: objective-c
      env: PYENV_VERSION=3.7.12
    - os: linux
      python: "pypy3"
      dist: bionic
      sudo: true

# command to install dependencies

install:
  - |
    if [[ $TRAVIS_OS_NAME == "osx" ]]; then
        if [ ! -e "$HOME/.pyenv/.git" ]; then
            if [ -e "$HOME/.pyenv" ]; then
                rm -rf ~/.pyenv
            fi
            git clone https://github.com/pyenv/pyenv.git ~/.pyenv --depth 10
        else
            (cd ~/.pyenv; git pull)
        fi
        PYENV_ROOT="$HOME/.pyenv"
        PATH="$PYENV_ROOT/bin:$PATH"
        hash -r
        eval "$(pyenv init -)"
        hash -r
        pyenv install --list
        pyenv install -s $PYENV_VERSION
        pyenv rehash
        pip install wheel
        # Since pyenv can be cached across OSX builds, uninstall first for a fresh build
        if pip show ksconf; then pip uninstall -y ksconf; fi
    fi
  - pip install $EXTRA_PKGS -r requirements-ci.txt
  - pip install .
  - echo "Build $TRAVIS_BUILD_NUMBER BRANCH=$TRAVIS_BRANCH TAG=$TRAVIS_TAG"
  - pip list --format=columns
# command to run tests
script:
  - |
    if [[ $BUILD_SDIST == "true" && $TRAVIS_BRANCH =~ ^v.* ]]; then export DO_RELEASE=True; fi
    echo DO_RELEASE=$DO_RELEASE
  - ksconf --version
  - coverage run -m unittest discover -s tests
after_success:
  - '[[ $BUILD_SDIST == "true" ]] && coverage run -a -m make_cli_docs'
  - codecov
  - coveralls
  - '[[ $BUILD_SDIST == "true" ]] && python -m pip install -r requirements-doc.txt && KSCONF_DEBUG=1 python splunk_app/build.py -vv'
  - '[[ $BUILD_SDIST == "true" ]] && ls -lsh zdist'
deploy:
  - provider: releases
    api_key:
      secure: "obAAHsUAWhlAjQzfCrOQn58RdmHS9ICO8zqeTxluh228NXTGptQhRWJh1Wj3wZ7uJXB+Ln3WeRaGqxq++FD37GOQhjWhMxBOsRSfWznvCUH/Ht141Plg2bZnh9jHJn1gbqiKS/axmlXVUBuLYNDtVfoMB42rb7slVL/J8u/8XIqR7K9U58yhaFwxtCMA5y6Z03CmmOcuAJUEAp8Jzn5y2glJxatIcBZYoJGCn9Ht+eEaTKrhfFxBZu+dPaoaPiS8L5PXjgVB+oGfdzPUrrbcPY02PIbmhm9AjxQrbdREeTXcRmqsnzss3fw8yfE/VFgNEL3HngS6WBBwGAdAgCR4/PMFgq3Y2PoboOkZleLYqEFaBfTNmOHqrx8hm47J/NNKhpqZVZo4Mj6q2PQvqz0d7AfZKddMSvLbdG2AIxPXRCJzRTNSZyX8IVQMPOjXVCoN6ndUHyNXYArXrpR04xN4PuAxxqEriuzh8TsTe4QTYNLDBFYmMj8TciGaafU8Ro49ldlq5ZyIEDnmhyoPh2lswjkr02PfOwYqUV01Ub086JKF7J0SmPCahAqRRaz6TFGbH4jDgR+kfMvZk//3dww7ALj1AmOgmYJEwgBMnHI19BnteSAUVcWuG1OGIH+Tyxf5LKKz6YYS4t6qLRjHEFEoerQiNqBDXwwweJaBMmlkYkE="
    file: zdist/ksconf-*
    file_glob: true
    skip_cleanup: true
    on:
      all_branches: true
      condition: $DO_RELEASE = True
  - provider: pypi
    user: __token__
    password:
      secure: "kSTWP/PnS6PKoOA0RaCk+l5+v3q7P1hKt2y8hXgDTBjusZZ+bRevSpJ7jppL1zWVd8D2WYe9xg8K0+KddTk7hYcsEU8SQxmLbGNrdxw3bkzYF0goLoFUxVjWm/2mdeW9PXySExZTYvX72n2NEbD22lfub5o+VsayDqNJyaYylxSBJVnBiaZ1QjuQEwBYKKvdJt7pnEIzv8rx7vsdAYunx1Ubrgmv19TZ3NURl4RQ3m5EBiKa9t3XDHTmS+KdOLJJUzXde/aGImR2u4jNW/16vTnVZKqVOquRhZk2JJH4laOnsC9dq8Mc2sFzdUsPcI2GEQ51cWMXK2805lI1+hQ/EAwHz7OPcDykBfQThs8wd/n2C44nS9Pr4pxXObynjlM+BYEvpXvzq71yX2hvENpBTa0YD0ySgG/BJ0wwxkMXdKOm4JO7PnTj/nMq4FLcPN4QSxYDxghjMIKwmXrWy18D18w5dBD7zpnfD6L3oZtZoozqzjaNAEDlnw90aBP5ilCNIPMU6ieDBRZb1BEOEjRepnfFbdKKr0bnsGuEJp5rwILETg9xthZ3ECR6sycGFZFYa+ItZUyv0EN9FQcHWch7cxwvcr8sqh6Mlf+Ag5hY6scklAi3Mq3Cglz1FtYFNpd6SmFhVRFFyvKPTADXF2uWrsI/UjceLSTJRHCaDTHchh0="
    distributions: "sdist bdist_wheel"
    skip_cleanup: true
    on:
      all_branches: true
      condition: $DO_RELEASE = True

notifications:
  email:
    - lowell@kintyre.co
